{"ast":null,"code":"var _jsxFileName = \"/Users/tarunkoli/Desktop/yogita/studymood/studymood/frontend/src/pages/Sessions.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\n// 1. MOOD-BASED BIOMETRIC INTEGRATION\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BiometricMoodDetection = () => {\n  _s();\n  const [heartRate, setHeartRate] = useState(null);\n  const [stressLevel, setStressLevel] = useState('low');\n\n  // Simulate biometric data (in real app, integrate with device sensors)\n  useEffect(() => {\n    const simulateBiometrics = () => {\n      const hr = Math.floor(Math.random() * 30) + 60; // 60-90 BPM\n      setHeartRate(hr);\n      if (hr > 80) setStressLevel('high');else if (hr > 70) setStressLevel('medium');else setStressLevel('low');\n    };\n    const interval = setInterval(simulateBiometrics, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"biometric-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDEC0 Real-time Mood Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Heart Rate: \", heartRate, \" BPM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stress-indicator ${stressLevel}`,\n          children: [\"Stress: \", stressLevel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// 2. ADVANCED ANALYTICS & PREDICTIONS\n_s(BiometricMoodDetection, \"Hh+VBIufPC42lwovpqI9uTRaqNA=\");\n_c = BiometricMoodDetection;\nconst FocusAnalytics = ({\n  sessions\n}) => {\n  _s2();\n  const [prediction, setPrediction] = useState(null);\n  const [insights, setInsights] = useState([]);\n  useEffect(() => {\n    if (sessions.length > 5) {\n      // AI-powered insights\n      const avgFocus = sessions.reduce((acc, s) => acc + s.focusScore, 0) / sessions.length;\n      const trend = calculateTrend(sessions);\n      setInsights([`Your focus improves by ${trend}% each week`, `Best focus time: ${getBestTimeSlot(sessions)}`, `Optimal session length for you: ${getOptimalDuration(sessions)} min`]);\n      setPrediction(predictNextSession(sessions));\n    }\n  }, [sessions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA AI Focus Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-grid\",\n      children: insights.map((insight, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insight-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"insight-icon\",\n          children: \"\\uD83D\\uDCA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: insight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDD2E Next Session Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recommended duration: \", prediction.duration, \" min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Expected focus score: \", prediction.expectedScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n// 3. GAMIFICATION WITH VIRTUAL FOREST\n_s2(FocusAnalytics, \"poWJPKHQj90SSSJiIPtrQ9MLElA=\");\n_c2 = FocusAnalytics;\nconst VirtualForest = ({\n  sessions\n}) => {\n  _s3();\n  const [trees, setTrees] = useState([]);\n  const [forestLevel, setForestLevel] = useState(1);\n  useEffect(() => {\n    // Grow trees based on completed sessions\n    const newTrees = sessions.map((session, idx) => ({\n      id: idx,\n      type: session.duration > 60 ? 'oak' : session.duration > 30 ? 'pine' : 'sapling',\n      health: Math.min(session.focusScore * 10, 100),\n      position: {\n        x: Math.random() * 300,\n        y: Math.random() * 200\n      }\n    }));\n    setTrees(newTrees);\n    setForestLevel(Math.floor(sessions.length / 10) + 1);\n  }, [sessions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"virtual-forest\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uD83C\\uDF33 Your Focus Forest (Level \", forestLevel, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forest-container\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"400\",\n        height: \"250\",\n        className: \"forest-svg\",\n        children: trees.map(tree => /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: tree.position.x,\n            cy: tree.position.y,\n            r: tree.type === 'oak' ? 20 : tree.type === 'pine' ? 15 : 8,\n            fill: `hsl(120, ${tree.health}%, 40%)`,\n            className: \"tree-crown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: tree.position.x - 3,\n            y: tree.position.y,\n            width: \"6\",\n            height: tree.type === 'oak' ? 25 : 20,\n            fill: \"#8B4513\",\n            className: \"tree-trunk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, tree.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forest-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83C\\uDF32 Trees: \", trees.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83C\\uDFC6 Level: \", forestLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83D\\uDC9A Health: \", Math.round(trees.reduce((acc, t) => acc + t.health, 0) / trees.length || 0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// 4. FOCUS CHALLENGES & COMPETITIONS\n_s3(VirtualForest, \"EOXug9uLlNXc8yMxDbGeMZlHW98=\");\n_c3 = VirtualForest;\nconst FocusChallenges = () => {\n  _s4();\n  const [challenges, setChallenges] = useState([{\n    id: 1,\n    title: \"Week Warrior\",\n    description: \"Complete 7 sessions this week\",\n    progress: 3,\n    target: 7,\n    reward: \"🏅 Gold Badge\"\n  }, {\n    id: 2,\n    title: \"Deep Diver\",\n    description: \"Complete a 2-hour session\",\n    progress: 0,\n    target: 1,\n    reward: \"🏊‍♂️ Deep Focus Badge\"\n  }, {\n    id: 3,\n    title: \"Consistency King\",\n    description: \"Study 5 days in a row\",\n    progress: 2,\n    target: 5,\n    reward: \"👑 Consistency Crown\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"challenges-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFAF Focus Challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challenges-grid\",\n      children: challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: challenge.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${challenge.progress / challenge.target * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenge-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [challenge.progress, \"/\", challenge.target]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"reward\",\n            children: challenge.reward\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, challenge.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n// 5. AMBIENT SOUNDSCAPES WITH REAL-TIME AUDIO\n_s4(FocusChallenges, \"ogdMd3rvFht/oSQ/nvtzaIcy70Y=\");\n_c4 = FocusChallenges;\nconst AmbientSounds = () => {\n  _s5();\n  const [currentSound, setCurrentSound] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const soundscapes = [{\n    id: 'rain',\n    name: '🌧️ Rain',\n    description: 'Gentle rainfall'\n  }, {\n    id: 'forest',\n    name: '🌲 Forest',\n    description: 'Birds & rustling leaves'\n  }, {\n    id: 'ocean',\n    name: '🌊 Ocean Waves',\n    description: 'Calming ocean sounds'\n  }, {\n    id: 'cafe',\n    name: '☕ Coffee Shop',\n    description: 'Background café chatter'\n  }, {\n    id: 'lo-fi',\n    name: '🎵 Lo-Fi Beats',\n    description: 'Chill study music'\n  }];\n  const playSound = soundId => {\n    setCurrentSound(soundId);\n    setIsPlaying(!isPlaying);\n    // In real implementation, integrate with Web Audio API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ambient-sounds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFA7 Focus Soundscapes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sounds-grid\",\n      children: soundscapes.map(sound => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => playSound(sound.id),\n        className: `sound-card ${currentSound === sound.id && isPlaying ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-emoji\",\n          children: sound.name.split(' ')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: sound.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sound.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, sound.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n\n// 6. SMART BREAK RECOMMENDATIONS\n_s5(AmbientSounds, \"uRipl1UXYVnirCw3j6HSNwrwg60=\");\n_c5 = AmbientSounds;\nconst SmartBreaks = ({\n  currentSession\n}) => {\n  _s6();\n  const [breakSuggestion, setBreakSuggestion] = useState(null);\n  useEffect(() => {\n    if (currentSession) {\n      const suggestions = [{\n        type: 'exercise',\n        activity: '🧘‍♂️ 5-min meditation',\n        duration: 5\n      }, {\n        type: 'hydration',\n        activity: '💧 Drink water + stretch',\n        duration: 3\n      }, {\n        type: 'eyes',\n        activity: '👀 20-20-20 eye rule',\n        duration: 2\n      }, {\n        type: 'movement',\n        activity: '🚶‍♂️ Quick walk',\n        duration: 10\n      }];\n      const suggestion = suggestions[Math.floor(Math.random() * suggestions.length)];\n      setBreakSuggestion(suggestion);\n    }\n  }, [currentSession]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smart-breaks\",\n    children: breakSuggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"break-suggestion\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u23F0 Smart Break Time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: breakSuggestion.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", breakSuggestion.duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-break-btn\",\n          children: \"Start Break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n\n// 7. COLLABORATIVE STUDY ROOMS\n_s6(SmartBreaks, \"JzKuIEJvwGV0SEEVmtJzjqqpLpA=\");\n_c6 = SmartBreaks;\nconst StudyRooms = () => {\n  _s7();\n  const [rooms, setRooms] = useState([{\n    id: 1,\n    name: \"Silent Library\",\n    participants: 12,\n    theme: \"📚\",\n    description: \"Pure focus zone\"\n  }, {\n    id: 2,\n    name: \"Coding Café\",\n    participants: 8,\n    theme: \"💻\",\n    description: \"For programmers\"\n  }, {\n    id: 3,\n    name: \"Med School Marathon\",\n    participants: 15,\n    theme: \"🏥\",\n    description: \"Medical students only\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-rooms\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDC65 Collaborative Study Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-grid\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-theme\",\n            children: room.theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"participants-count\",\n            children: [room.participants, \" studying\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: room.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: room.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-room-btn\",\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s7(StudyRooms, \"6FRR4XxGrO/om8RG5A1MN2kd4/w=\");\n_c7 = StudyRooms;\nexport { BiometricMoodDetection, FocusAnalytics, VirtualForest, FocusChallenges, AmbientSounds, SmartBreaks, StudyRooms };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"BiometricMoodDetection\");\n$RefreshReg$(_c2, \"FocusAnalytics\");\n$RefreshReg$(_c3, \"VirtualForest\");\n$RefreshReg$(_c4, \"FocusChallenges\");\n$RefreshReg$(_c5, \"AmbientSounds\");\n$RefreshReg$(_c6, \"SmartBreaks\");\n$RefreshReg$(_c7, \"StudyRooms\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","BiometricMoodDetection","_s","heartRate","setHeartRate","stressLevel","setStressLevel","simulateBiometrics","hr","Math","floor","random","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FocusAnalytics","sessions","_s2","prediction","setPrediction","insights","setInsights","length","avgFocus","reduce","acc","s","focusScore","trend","calculateTrend","getBestTimeSlot","getOptimalDuration","predictNextSession","map","insight","idx","duration","expectedScore","_c2","VirtualForest","_s3","trees","setTrees","forestLevel","setForestLevel","newTrees","session","id","type","health","min","position","x","y","width","height","tree","cx","cy","r","fill","round","t","_c3","FocusChallenges","_s4","challenges","setChallenges","title","description","progress","target","reward","challenge","style","_c4","AmbientSounds","_s5","currentSound","setCurrentSound","isPlaying","setIsPlaying","soundscapes","name","playSound","soundId","sound","onClick","split","_c5","SmartBreaks","currentSession","_s6","breakSuggestion","setBreakSuggestion","suggestions","activity","suggestion","_c6","StudyRooms","_s7","rooms","setRooms","participants","theme","room","_c7","$RefreshReg$"],"sources":["/Users/tarunkoli/Desktop/yogita/studymood/studymood/frontend/src/pages/Sessions.js"],"sourcesContent":["// 1. MOOD-BASED BIOMETRIC INTEGRATION\nimport { useEffect, useState } from \"react\";\n\nconst BiometricMoodDetection = () => {\n  const [heartRate, setHeartRate] = useState(null);\n  const [stressLevel, setStressLevel] = useState('low');\n  \n  // Simulate biometric data (in real app, integrate with device sensors)\n  useEffect(() => {\n    const simulateBiometrics = () => {\n      const hr = Math.floor(Math.random() * 30) + 60; // 60-90 BPM\n      setHeartRate(hr);\n      \n      if (hr > 80) setStressLevel('high');\n      else if (hr > 70) setStressLevel('medium');\n      else setStressLevel('low');\n    };\n    \n    const interval = setInterval(simulateBiometrics, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"biometric-panel\">\n      <h3>🫀 Real-time Mood Detection</h3>\n      <div className=\"metrics\">\n        <div className=\"metric\">\n          <span>Heart Rate: {heartRate} BPM</span>\n          <div className={`stress-indicator ${stressLevel}`}>\n            Stress: {stressLevel}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 2. ADVANCED ANALYTICS & PREDICTIONS\nconst FocusAnalytics = ({ sessions }) => {\n  const [prediction, setPrediction] = useState(null);\n  const [insights, setInsights] = useState([]);\n\n  useEffect(() => {\n    if (sessions.length > 5) {\n      // AI-powered insights\n      const avgFocus = sessions.reduce((acc, s) => acc + s.focusScore, 0) / sessions.length;\n      const trend = calculateTrend(sessions);\n      \n      setInsights([\n        `Your focus improves by ${trend}% each week`,\n        `Best focus time: ${getBestTimeSlot(sessions)}`,\n        `Optimal session length for you: ${getOptimalDuration(sessions)} min`\n      ]);\n      \n      setPrediction(predictNextSession(sessions));\n    }\n  }, [sessions]);\n\n  return (\n    <div className=\"analytics-dashboard\">\n      <h3>📊 AI Focus Analytics</h3>\n      <div className=\"insights-grid\">\n        {insights.map((insight, idx) => (\n          <div key={idx} className=\"insight-card\">\n            <span className=\"insight-icon\">💡</span>\n            <p>{insight}</p>\n          </div>\n        ))}\n      </div>\n      {prediction && (\n        <div className=\"prediction-card\">\n          <h4>🔮 Next Session Prediction</h4>\n          <p>Recommended duration: {prediction.duration} min</p>\n          <p>Expected focus score: {prediction.expectedScore}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 3. GAMIFICATION WITH VIRTUAL FOREST\nconst VirtualForest = ({ sessions }) => {\n  const [trees, setTrees] = useState([]);\n  const [forestLevel, setForestLevel] = useState(1);\n\n  useEffect(() => {\n    // Grow trees based on completed sessions\n    const newTrees = sessions.map((session, idx) => ({\n      id: idx,\n      type: session.duration > 60 ? 'oak' : session.duration > 30 ? 'pine' : 'sapling',\n      health: Math.min(session.focusScore * 10, 100),\n      position: { x: Math.random() * 300, y: Math.random() * 200 }\n    }));\n    setTrees(newTrees);\n    setForestLevel(Math.floor(sessions.length / 10) + 1);\n  }, [sessions]);\n\n  return (\n    <div className=\"virtual-forest\">\n      <h3>🌳 Your Focus Forest (Level {forestLevel})</h3>\n      <div className=\"forest-container\">\n        <svg width=\"400\" height=\"250\" className=\"forest-svg\">\n          {trees.map(tree => (\n            <g key={tree.id}>\n              <circle \n                cx={tree.position.x} \n                cy={tree.position.y} \n                r={tree.type === 'oak' ? 20 : tree.type === 'pine' ? 15 : 8}\n                fill={`hsl(120, ${tree.health}%, 40%)`}\n                className=\"tree-crown\"\n              />\n              <rect \n                x={tree.position.x - 3} \n                y={tree.position.y} \n                width=\"6\" \n                height={tree.type === 'oak' ? 25 : 20}\n                fill=\"#8B4513\"\n                className=\"tree-trunk\"\n              />\n            </g>\n          ))}\n        </svg>\n      </div>\n      <div className=\"forest-stats\">\n        <span>🌲 Trees: {trees.length}</span>\n        <span>🏆 Level: {forestLevel}</span>\n        <span>💚 Health: {Math.round(trees.reduce((acc, t) => acc + t.health, 0) / trees.length || 0)}%</span>\n      </div>\n    </div>\n  );\n};\n\n// 4. FOCUS CHALLENGES & COMPETITIONS\nconst FocusChallenges = () => {\n  const [challenges, setChallenges] = useState([\n    { id: 1, title: \"Week Warrior\", description: \"Complete 7 sessions this week\", progress: 3, target: 7, reward: \"🏅 Gold Badge\" },\n    { id: 2, title: \"Deep Diver\", description: \"Complete a 2-hour session\", progress: 0, target: 1, reward: \"🏊‍♂️ Deep Focus Badge\" },\n    { id: 3, title: \"Consistency King\", description: \"Study 5 days in a row\", progress: 2, target: 5, reward: \"👑 Consistency Crown\" }\n  ]);\n\n  return (\n    <div className=\"challenges-section\">\n      <h3>🎯 Focus Challenges</h3>\n      <div className=\"challenges-grid\">\n        {challenges.map(challenge => (\n          <div key={challenge.id} className=\"challenge-card\">\n            <h4>{challenge.title}</h4>\n            <p>{challenge.description}</p>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\"\n                style={{ width: `${(challenge.progress / challenge.target) * 100}%` }}\n              ></div>\n            </div>\n            <div className=\"challenge-footer\">\n              <span>{challenge.progress}/{challenge.target}</span>\n              <span className=\"reward\">{challenge.reward}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// 5. AMBIENT SOUNDSCAPES WITH REAL-TIME AUDIO\nconst AmbientSounds = () => {\n  const [currentSound, setCurrentSound] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  \n  const soundscapes = [\n    { id: 'rain', name: '🌧️ Rain', description: 'Gentle rainfall' },\n    { id: 'forest', name: '🌲 Forest', description: 'Birds & rustling leaves' },\n    { id: 'ocean', name: '🌊 Ocean Waves', description: 'Calming ocean sounds' },\n    { id: 'cafe', name: '☕ Coffee Shop', description: 'Background café chatter' },\n    { id: 'lo-fi', name: '🎵 Lo-Fi Beats', description: 'Chill study music' }\n  ];\n\n  const playSound = (soundId) => {\n    setCurrentSound(soundId);\n    setIsPlaying(!isPlaying);\n    // In real implementation, integrate with Web Audio API\n  };\n\n  return (\n    <div className=\"ambient-sounds\">\n      <h3>🎧 Focus Soundscapes</h3>\n      <div className=\"sounds-grid\">\n        {soundscapes.map(sound => (\n          <button\n            key={sound.id}\n            onClick={() => playSound(sound.id)}\n            className={`sound-card ${currentSound === sound.id && isPlaying ? 'active' : ''}`}\n          >\n            <span className=\"sound-emoji\">{sound.name.split(' ')[0]}</span>\n            <div className=\"sound-info\">\n              <h4>{sound.name}</h4>\n              <p>{sound.description}</p>\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// 6. SMART BREAK RECOMMENDATIONS\nconst SmartBreaks = ({ currentSession }) => {\n  const [breakSuggestion, setBreakSuggestion] = useState(null);\n\n  useEffect(() => {\n    if (currentSession) {\n      const suggestions = [\n        { type: 'exercise', activity: '🧘‍♂️ 5-min meditation', duration: 5 },\n        { type: 'hydration', activity: '💧 Drink water + stretch', duration: 3 },\n        { type: 'eyes', activity: '👀 20-20-20 eye rule', duration: 2 },\n        { type: 'movement', activity: '🚶‍♂️ Quick walk', duration: 10 }\n      ];\n      \n      const suggestion = suggestions[Math.floor(Math.random() * suggestions.length)];\n      setBreakSuggestion(suggestion);\n    }\n  }, [currentSession]);\n\n  return (\n    <div className=\"smart-breaks\">\n      {breakSuggestion && (\n        <div className=\"break-suggestion\">\n          <h3>⏰ Smart Break Time!</h3>\n          <div className=\"suggestion-card\">\n            <h4>{breakSuggestion.activity}</h4>\n            <p>Duration: {breakSuggestion.duration} minutes</p>\n            <button className=\"start-break-btn\">Start Break</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 7. COLLABORATIVE STUDY ROOMS\nconst StudyRooms = () => {\n  const [rooms, setRooms] = useState([\n    { id: 1, name: \"Silent Library\", participants: 12, theme: \"📚\", description: \"Pure focus zone\" },\n    { id: 2, name: \"Coding Café\", participants: 8, theme: \"💻\", description: \"For programmers\" },\n    { id: 3, name: \"Med School Marathon\", participants: 15, theme: \"🏥\", description: \"Medical students only\" }\n  ]);\n\n  return (\n    <div className=\"study-rooms\">\n      <h3>👥 Collaborative Study Rooms</h3>\n      <div className=\"rooms-grid\">\n        {rooms.map(room => (\n          <div key={room.id} className=\"room-card\">\n            <div className=\"room-header\">\n              <span className=\"room-theme\">{room.theme}</span>\n              <span className=\"participants-count\">{room.participants} studying</span>\n            </div>\n            <h4>{room.name}</h4>\n            <p>{room.description}</p>\n            <button className=\"join-room-btn\">Join Room</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport { \n  BiometricMoodDetection, \n  FocusAnalytics, \n  VirtualForest, \n  FocusChallenges, \n  AmbientSounds, \n  SmartBreaks, \n  StudyRooms \n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}